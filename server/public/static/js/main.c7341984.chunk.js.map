{"version":3,"sources":["services/AuthService.js","services/CardService.js","services/ColumnService.js","components/Authentication/Signup/Signup.js","components/Authentication/Login/Login.js","components/Card/Card.js","components/Column/Column.js","components/Card/CreateCard/CreateCard.js","components/Card/CardDetails/CardDetails.js","components/Column/CreateColumn/CreateColumn.js","components/Sidebar/Sidebar.js","components/Board/Board.js","components/ProtectedRoute/index.js","components/Chart/Line.js","components/Chart/Pie.js","components/Chart/Calendar.js","components/Chart/Bar.js","components/Chart/Charting.js","App.js","reportWebVitals.js","index.js"],"names":["baseURL","process","REACT_APP_SERVER_POINT","service","axios","create","withCredentials","AUTH_SERVICE","signup","userData","post","login","logout","getAuthenticatedUser","get","CARD_SERVICE","createCard","cardData","getCards","deleteCard","id","updateCard","getCardDetails","COLUMN_SERVICE","createColumn","columnData","getColumns","deleteColumn","updateColumn","getColumnDetails","Signup","state","name","email","password","message","handleInputChange","event","target","value","setState","handleFormSubmission","preventDefault","then","responseFromServer","data","user","columns","props","onUserChange","history","push","catch","err","response","className","onSubmit","this","htmlFor","type","placeholder","onChange","style","color","paddingTop","textAlign","map","msg","to","src","alt","React","Component","card","_id","title","company","location","index","date","note","draggableId","provided","snapshot","backgroundColor","isDragging","border","fontSize","draggableProps","ref","innerRef","dragHandleProps","column","isEditEnabled","toggleEdit","handleChange","handleSubmit","cards","toggleDetailsModal","setCurrentCard","editColumn","displayNotification","required","onClick","length","droppableId","isDraggingOver","droppableProps","CreateCard","postingURL","modalIsOpen","serverResponse","successMessage","updateCardState","Object","keys","replaceColumns","toggleCreateModal","Modal","centered","isOpen","displayCreateModal","ModalHeader","toggle","ModalBody","display","justifyContent","borderBottom","marginBottom","padding","width","rows","cols","CardDetails","toggleEditModal","editCard","displayDetailsModal","displayEditModal","size","cssModule","slice","Button","marginTop","CreateColumn","updateColumnState","toggleColumnModal","displayColumnModal","Sidebar","logoutAndLiftUserState","console","log","Board","selectedCard","componentDidMount","fetchData","window","setTimeout","onDragEnd","result","destination","source","columnSrc","values","find","col","columnDst","cardsSrc","cardsDst","crd","splice","getJobsApplied","filter","getMsg","currentUser","Alert","ProtectedRoute","authorized","redirect","Chart","lineData","margin","top","right","bottom","left","xScale","yScale","min","max","stacked","reverse","yFormat","curve","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","enableGridX","enableGridY","colors","scheme","lineWidth","pointSize","pointColor","from","modifiers","pointBorderWidth","pointBorderColor","pointLabelYOffset","enableArea","areaBaselineValue","useMesh","legends","Pie","pieData","styles","sliceStyle","match","Math","floor","random","innerRadius","padAngle","cornerRadius","borderWidth","borderColor","radialLabelsSkipAngle","radialLabelsTextColor","radialLabelsLinkColor","sliceLabelsSkipAngle","sliceLabelsTextColor","defs","background","stagger","rotation","spacing","fill","Calendar","calendarData","emptyColor","yearSpacing","monthBorderColor","dayBorderWidth","dayBorderColor","anchor","direction","translateY","itemCount","itemWidth","itemHeight","itemsSpacing","itemDirection","Bar","barData","indexBy","layout","valueScale","labelSkipWidth","labelSkipHeight","labelTextColor","animate","motionStiffness","motionDamping","Charting","dateOccurrence","reduce","acc","curr","formattedData","entries","entry","day","toString","locationOccurrence","split","formatData","x","y","marginLeft","App","loading","Promise","all","a","v","updateUser","column1","column2","columnId","res","deleteRes","updatedColumn","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7341984.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseURL = process.env.REACT_APP_SERVER_POINT;\n\nconst service = axios.create({\n  baseURL,\n  withCredentials: true\n});\n\nconst AUTH_SERVICE = {\n  signup(userData) {\n    return service.post('/api/signup', userData);\n  },\n  login(userData) {\n    return service.post('/api/login', userData);\n  },\n  logout() {\n    return service.post('/api/logout', {});\n  },\n  getAuthenticatedUser() {\n    return service.get('/api/isLoggedIn');\n  }\n};\n\nexport default AUTH_SERVICE;\n","import axios from 'axios';\n\nconst baseURL = process.env.REACT_APP_SERVER_POINT;\n\nconst service = axios.create({\n  baseURL,\n  withCredentials: true\n});\n\nconst CARD_SERVICE = {\n  createCard(cardData) {\n    return service.post('/api/cards', cardData);\n  },\n  getCards() {\n    return service.get('/api/cards');\n  },\n  deleteCard(id) {\n    return service.post(`/api/cards/${id}/delete`, {});\n  },\n  updateCard(id, cardData) {\n    return service.post(`/api/cards/${id}/update`, cardData);\n  },\n  getCardDetails(id) {\n    return service.get(`/api/cards/${id}`);\n  }\n};\n\nexport default CARD_SERVICE;\n","import axios from 'axios';\n\nconst baseURL = process.env.REACT_APP_SERVER_POINT;\n\nconst service = axios.create({\n  baseURL,\n  withCredentials: true\n});\n\nconst COLUMN_SERVICE = {\n  createColumn(columnData) {\n    return service.post('/api/columns', columnData);\n  },\n  getColumns() {\n    return service.get('/api/columns');\n  },\n  deleteColumn(id) {\n    return service.post(`/api/columns/${id}/delete`, {});\n  },\n  updateColumn(id, columnData) {\n    return service.post(`/api/columns/${id}/update`, columnData);\n  },\n  getColumnDetails(id) {\n    return service.get(`/api/columns/${id}`);\n  }\n};\n\nexport default COLUMN_SERVICE;\n","import React from 'react';\nimport '../auth.css';\nimport { Link } from 'react-router-dom'\nimport { MdPerson, MdEmail, MdLock  } from 'react-icons/md';\n\n\nimport AUTH_SERVICE from '../../../services/AuthService';\n\nexport default class Signup extends React.Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    message: null\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmission = event => {\n    event.preventDefault();\n\n    const { name, email, password } = this.state;\n\n    AUTH_SERVICE.signup({ name, email, password })\n      .then(responseFromServer => {\n        const { user, columns } = responseFromServer.data;\n\n        this.props.onUserChange(user, columns);\n        this.props.history.push('/');\n      })\n      .catch(err => {\n        if (err.response && err.response.data) {\n          return this.setState({ message: err.response.data.message });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"landing-body\">\n        <section className=\"signup\">\n          <div className=\"container\">\n            <div onSubmit={this.handleFormSubmission} className=\"signup-content\">\n              <div className=\"signup-form\">\n                <h2 className=\"form-title\">Sign up</h2>\n                <form onSubmit={this.handleFormSubmission} className=\"register-form\" id=\"register-form\">\n\n                  {/* name */}\n                  <div className=\"form-group\">\n                    <label htmlFor=\"name\" className=\"icon\"><MdPerson /></label>\n                    <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Your Name\" value={this.state.name}\n                      onChange={this.handleInputChange} />\n                  </div>\n\n                  {/* email */}\n                  <div className=\"form-group\">\n                    <label htmlFor=\"email\" className=\"icon\"><MdEmail /></label>\n                    <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Your Email\" value={this.state.email}\n                      onChange={this.handleInputChange} />\n                  </div>\n\n                  {/* password */}\n                  <div className=\"form-group\">\n                    <label htmlFor=\"pass\" className=\"icon\"><MdLock /></label>\n                    <input type=\"password\" name=\"password\" id=\"pass\" placeholder=\"Password\" value={this.state.password}\n                      onChange={this.handleInputChange} />\n                  </div>\n\n                  {/* submit btn */}\n                  <div className=\"form-group form-button\">\n                    <input type=\"submit\" name=\"signup\" id=\"signup\" className=\"form-submit\" value=\"Register\" />\n                  </div>\n\n\n                  {/* single error message */}\n                  {this.state.message && <div style={{ color: \"red\", paddingTop: \"1rem\"}}> {this.state.message} </div>}\n\n                  {/* error message array*/}\n                  {this.state.message>1 &&\n                    <div style={{ color: \"red\", textAlign: \"left\" }}>\n                      {this.state.message.map(msg => {\n                        return (<div>{msg}</div>)\n                      })}\n                    </div>}\n\n                    <br/><Link to='/login' className=\"signup-image-link\">I am already member</Link>\n\n\n                </form>\n              </div>\n              <div className=\"signup-image\">\n                <figure><img src=\"images/signup-image.jpg\" alt=\"illustration of modern desk\" /></figure>\n              </div>\n            </div>\n          </div>\n\n\n        </section>\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport '../auth.css';\nimport { Link } from 'react-router-dom'\nimport { MdEmail, MdLock  } from 'react-icons/md';\n\nimport AUTH_SERVICE from '../../../services/AuthService';\n\nexport default class Signup extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    message: null\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmission = event => {\n    event.preventDefault();\n\n    const { email, password } = this.state;\n\n    AUTH_SERVICE.login({ email, password })\n      .then(responseFromServer => {\n        const { user } = responseFromServer.data;\n\n        this.props.onUserChange(user);\n        this.props.history.push('/');\n      })\n      .catch(err => {\n        if (err.response && err.response.data) {\n          return this.setState({ message: err.response.data.message });\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"landing-body\">\n        <section className=\"sign-in\">\n          <div className=\"container\">\n            <div className=\"signin-content\">\n              <div className=\"signin-image\">\n                <figure><img src=\"/images/signin-image.jpg\" alt=\"illustration of a person sitting on a chair holding a laptop\" /></figure>\n              </div>\n\n              <div className=\"global-form\">\n                <h2 className=\"form-title\">Sign in</h2>\n                <form onSubmit={this.handleFormSubmission} className=\"register-form\" id=\"login-form\">\n\n                  <div className=\"form-group\">\n                  <label htmlFor=\"email\" className=\"icon\"><MdEmail /></label>\n                    <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" value={this.state.email}\n                      onChange={this.handleInputChange} />\n                  </div>\n\n                  <div className=\"form-group\">\n                  <label htmlFor=\"your_pass\" className=\"icon\"><MdLock /></label>\n                    <input type=\"password\" name=\"password\" id=\"your_pass\" placeholder=\"Password\" value={this.state.password}\n                      onChange={this.handleInputChange} />\n                  </div>\n\n                  {/* <div className=\"form-group\">\n                                <input type=\"checkbox\" name=\"remember-me\" id=\"remember-me\" className=\"agree-term\" />\n                                <label htmlFor=\"remember-me\" className=\"label-agree-term\"><span><span></span></span>Remember me</label>\n                            </div> */}\n                  <div className=\"form-group form-button\">\n                    <input type=\"submit\" name=\"signin\" id=\"signin\" className=\"form-submit\" value=\"Log in\" />\n                  </div>\n                </form>\n\n                {/* error message */}\n                {this.state.message && <div style={{ color: \"red\", paddingTop: \"1rem\"}}> {this.state.message} </div>}\n\n                <br/><Link to='/signup' className=\"signup-image-link\">Create an account</Link>\n\n\n                {/* <div className=\"social-login\">\n                            <span className=\"social-label\">Or login with</span>\n                            <ul className=\"socials\">\n                                <li><a href=\"#\"><i className=\"display-flex-center zmdi zmdi-facebook\"></i></a></li>\n                                <li><a href=\"#\"><i className=\"display-flex-center zmdi zmdi-twitter\"></i></a></li>\n                                <li><a href=\"#\"><i className=\"display-flex-center zmdi zmdi-google\"></i></a></li>\n                            </ul>\n                        </div> */}\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport './Card.css'\nimport { Draggable } from 'react-beautiful-dnd'\nimport { MdLocationOn } from \"react-icons/md\";\nimport { BsBuilding } from \"react-icons/bs\";\n\nexport default class card extends Component {\n\n    render() {\n        const { _id, title, company, location, date, note } = this.props.card;\n        const { index } = this.props;\n        return (\n            <Draggable draggableId={_id} index={index}>\n                {(provided, snapshot) => {\n                    const style = {\n                        backgroundColor: snapshot.isDragging ? '#E3EEE1' : 'white',\n                        border: snapshot.isDragging ? '2px solid #fff' : 'none',\n                        fontSize: 18,\n                        ...provided.draggableProps.style,\n                    };\n                    return (<div\n                        className=\"card-tile\"\n                        ref={provided.innerRef}\n                        {...provided.dragHandleProps}\n                        {...provided.draggableProps}\n                        style={style}\n                    >\n                        <div className=\"card-tile-header\">{title}</div>\n                        <div className=\"card-tile-subheader\"><BsBuilding /> {company}</div>\n                        <div className=\"card-tile-subheader\">{location ? (<MdLocationOn style={{ color: \"#f40810\" }} />) : null} {location}</div>\n                    </div>)\n                }}\n            </Draggable>\n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport Card from '../Card/Card'\nimport { Droppable } from 'react-beautiful-dnd'\nimport { FaRegTrashAlt } from \"react-icons/fa\";\nimport { BiEdit, BiSave } from \"react-icons/bi\";\nimport './Column.css'\n\nexport default class column extends Component {\n\n    state = {\n        isEditEnabled: false,\n        title: this.props.column.title\n    }\n\n    toggleEdit = () => {\n        this.setState({\n            isEditEnabled: !this.state.isEditEnabled,\n        })\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n    }\n\n    render() {\n        const { _id, title, cards } = this.props.column;\n        const { index, toggleDetailsModal, setCurrentCard, editColumn, deleteColumn, displayNotification } = this.props;\n\n        return (\n            <div className=\"column\">\n                {this.state.isEditEnabled ?\n\n                    <form onSubmit={this.handleSubmit}\n                    >\n                        <div className=\"column-header\">\n                            <input type=\"text\" name=\"title\" id=\"title\" required \n                            value={this.state.title} \n                            onChange={this.handleChange} />\n                            <BiSave type=\"submit\" onClick={() => {editColumn(_id, this.state.title); this.toggleEdit(); displayNotification()}} />\n                        </div>\n                    </form>\n\n                    : <div className=\"column-header\">\n                        <div>{title} ({cards.length})</div>\n                        <div>\n                            <BiEdit className=\"h-icon\" onClick={this.toggleEdit} />\n                            <FaRegTrashAlt onClick={() => { deleteColumn(_id); displayNotification() }} />\n                        </div>\n                    </div>\n                }\n                <div>\n                    <Droppable droppableId={_id} index={index}>\n                        {(provided, snapshot) => (\n                            <div className=\"droppable-height\"\n                                ref={provided.innerRef}\n                                style={{ backgroundColor: snapshot.isDraggingOver ? '#E3EEE1' : 'inherit' }}\n                                {...provided.droppableProps}\n                            >\n                                {cards.map((card, index) => {\n                                    return (\n                                        <div key={card._id} onClick={() => { toggleDetailsModal(); setCurrentCard(card) }}>\n                                            <Card card={card} index={index} column={_id} />\n                                        </div>\n                                    )\n                                })\n                                }\n                                {provided.placeholder}\n                            </div>\n                        )}\n                    </Droppable>\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React from 'react'\nimport CARD_SERVICE from \"../../../services/CardService\"\nimport { MdWork, MdLocationOn, MdWeb } from \"react-icons/md\";\nimport { BsBuilding, BsCalendar } from \"react-icons/bs\";\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport './CreateCard.css'\n\nexport default class CreateCard extends React.Component {\n\n    state = {\n        title: '',\n        company: '',\n        date: '',\n        note: '',\n        location: '',\n        postingURL: '',\n        modalIsOpen: false,\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { title, company, date, note, location, postingURL } = this.state;\n\n        // create card in db\n        CARD_SERVICE.createCard({ title, company, date, note, location, postingURL })\n            .then((serverResponse) => {\n                const { card, successMessage } = serverResponse.data;\n\n                // set the state\n                this.props.updateCardState(card, successMessage);\n\n                // insert newly created card in first column\n                const { columns } = this.props;\n                columns[Object.keys(columns)[0]].cards.push(card)\n\n                // update column in db and state\n                this.props.replaceColumns(columns[Object.keys(columns)[0]], columns[Object.keys(columns)[0]])\n\n                this.props.toggleCreateModal()\n\n                // clear form after submission\n                this.setState({\n                    title: '',\n                    company: '',\n                    date: '',\n                    note: '',\n                    location: '',\n                    postingURL: '',\n                })\n\n                this.props.displayNotification()\n            })\n    }\n\n    render() {\n        const { title, company, date, note, location, postingURL, message } = this.state;\n        return (\n            <div>\n\n                <Modal centered isOpen={this.props.displayCreateModal}>\n                    <ModalHeader toggle={this.props.toggleCreateModal}>Add New Job</ModalHeader>\n                    <ModalBody>\n                        <div className=\"modal-form\">\n\n                            <form onSubmit={this.handleSubmit} className=\"register-form\" id=\"login-form\">\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"title\" className=\"icon\"><MdWork /></label>\n                                    <input type=\"text\" name=\"title\" id=\"title\" placeholder=\"Job Title *\" required value={title}\n                                        onChange={this.handleChange} />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"company\" className=\"icon\"><BsBuilding /></label>\n                                    <input type=\"text\" name=\"company\" id=\"company\" placeholder=\"Company Name *\" required value={company}\n                                        onChange={this.handleChange} />\n                                </div>\n\n                                <div className=\"form-group\" style={{ display: \"flex\", justifyContent: \"space-between\", borderBottom:\"1px solid #999\" }}>\n                                    <div className=\"icon\" style={{display:\"flex\", }}><BsCalendar style={{marginBottom:\"0\"}}/>\n                                        <div style={{padding: \"0 15px\",color:\"#999\"}}>Date Applied  </div></div>\n                                    <input style={{ border:\"0\", padding: \"0\", width: \"40%\" }} type=\"date\" name=\"date\" id=\"date\" value={date}\n                                        onChange={this.handleChange} />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"location\" className=\"icon\"><MdLocationOn /></label>\n                                    <input type=\"text\" name=\"location\" id=\"location\" placeholder=\"Location\" value={location}\n                                        onChange={this.handleChange} />\n                                </div>\n\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"postingURL\" className=\"icon\"><MdWeb /></label>\n                                    <input type=\"text\" name=\"postingURL\" id=\"postingURL\" placeholder=\"URL to job posting\" value={postingURL}\n                                        onChange={this.handleChange} />\n                                </div>\n\n                                <div className=\"form-group\" style={{ marginBottom: \"0\" }}>\n                                    <textarea rows=\"4\" cols=\"51\" name=\"note\" id=\"note\" placeholder=\"Include any notes here...\" value={note}\n                                        onChange={this.handleChange} />\n                                </div>\n\n                                <div className=\"form-group form-button\">\n                                    <input type=\"submit\" name=\"create\" id=\"create\" className=\"form-submit-btn\" value=\"Create\" />\n                                </div>\n                            </form>\n\n                            {/* error message */}\n                            {message && <div style={{ color: \"red\", paddingTop: \"1rem\" }}> {message} </div>}\n\n                        </div>\n                    </ModalBody>\n                </Modal>\n\n            </div>\n\n        )\n    }\n}","import React from 'react'\nimport { MdLocationOn, MdWeb } from \"react-icons/md\";\nimport { BsBuilding, BsCalendar } from \"react-icons/bs\";\nimport { BiNote } from \"react-icons/bi\";\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport './CardDetails.css'\n\nexport default class CardDetails extends React.Component {\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n    }\n\n    render() {\n        const { _id, title, company, location, date, note, postingURL } = this.props.card;\n        const { toggleDetailsModal, toggleEditModal, editCard, deleteCard, displayDetailsModal, displayEditModal, displayNotification, column, card } = this.props;\n        return (\n            <>\n                {displayDetailsModal &&\n                    (<Modal size=\"lg\" centered isOpen={displayDetailsModal} toggle={() => toggleDetailsModal({})}>\n                        <ModalHeader cssModule={{ 'modal-title': 'w-100 text-center' }}>{title}</ModalHeader>\n\n                        <ModalBody className=\"details-container\">\n\n                            <div className=\"details-header\"><BsBuilding className=\"details-icon\" /> Company</div>\n                            <div className=\"details\">{company}</div>\n\n                            <div className=\"details-header\"><MdLocationOn className=\"details-icon\" /> Location</div>\n                            <div className=\"details\">{location}</div>\n\n                            <div className=\"details-header\"><BsCalendar className=\"details-icon\" /> Date Applied</div>\n                            <div className=\"details\">{date? date.slice(0,10): date}</div>\n\n                            <div className=\"details-header\"><MdWeb className=\"details-icon\" /> URL to Job Posting</div>\n                            <div className=\"details\">{postingURL}</div>\n\n                            <div className=\"details-header\"><BiNote className=\"details-icon\" /> Notes</div>\n                            <div className=\"details\">{note}</div>\n\n                            <Button color=\"danger\" className=\"float-right\"\n                                onClick={() => { deleteCard(_id, column); toggleDetailsModal({}); displayNotification() }}>Delete</Button>\n                            <Button color=\"light\" className=\"float-right edit-btn\"\n                                onClick={() => { toggleDetailsModal({}); toggleEditModal() }}\n                            >Edit</Button>\n\n                        </ModalBody>\n                    </Modal>)}\n\n                { displayEditModal && (\n\n                    <Modal size=\"lg\" centered isOpen={displayEditModal} toggle={() => toggleEditModal({})}>\n                        <ModalHeader cssModule={{ 'modal-title': 'w-100 text-center' }}>{title} (EDIT)</ModalHeader>\n                        <ModalBody className=\"details-container\">\n\n                            <form onSubmit={this.handleSubmit}>\n\n                                <div className=\"details-header\">\n                                    <BsBuilding className=\"details-icon\" /> Job Title\n                            </div>\n                                <div className=\"edit-input\">\n                                    <input type=\"text\" name=\"title\" id=\"title\" placeholder={title} required value={title} onChange={this.props.handleChange} />\n                                </div>\n\n                                <div className=\"details-header\">\n                                    <BsBuilding className=\"details-icon\" /> Company\n                            </div>\n                                <div className=\"edit-input\">\n                                    <input type=\"text\" name=\"company\" id=\"company\" placeholder={company} required value={company} onChange={this.props.handleChange} />\n                                </div>\n\n                                <div className=\"details-header\">\n                                    <MdLocationOn className=\"details-icon\" /> Location\n                            </div>\n                                <div className=\"edit-input\">\n                                    <input type=\"text\" name=\"location\" id=\"location\" placeholder={location} value={location} onChange={this.props.handleChange} />\n                                </div>\n\n                                <div className=\"details-header\">\n                                    <BsCalendar className=\"details-icon\" /> Date Applied\n                            </div>\n                                <div className=\"edit-input\">\n                                    <input type=\"date\" name=\"date\" id=\"date\" value={date? date.slice(0,10): date} onChange={this.props.handleChange} />\n                                </div>\n\n                                <div className=\"details-header\">\n                                    <MdWeb className=\"details-icon\" /> URL to Job Posting\n                            </div>\n                                <div className=\"edit-input\">\n                                    <input type=\"text\" name=\"postingURL\" id=\"postingURL\" placeholder={postingURL} value={postingURL} onChange={this.props.handleChange} />\n                                </div>\n\n                                <div className=\"details-header\">\n                                    <BiNote className=\"details-icon\" /> Notes\n                            </div>\n                                <div className=\"edit-input\">\n                                    <textarea rows=\"5\" cols=\"51\" name=\"note\" id=\"note\" style={{ marginTop: \".5rem\", marginBottom: \"1.5rem\", width: \"100%\" }} placeholder={note} value={note} onChange={this.props.handleChange} />\n                                </div>\n\n                                <Button color=\"light\" className=\"float-right edit-btn\"\n                                    onClick={() => { editCard(_id, card); toggleEditModal(); displayNotification() }}>Save</Button>\n                            </form>\n\n                        </ModalBody>\n                    </Modal>\n                )}\n            </>\n        )\n    }\n} ","import React from 'react'\nimport COLUMN_SERVICE from \"../../../services/ColumnService\"\nimport { FaColumns } from \"react-icons/fa\";\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport './CreateColumn.css'\n\nexport default class CreateColumn extends React.Component {\n\n    state = {\n        title: '',\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({ [name]: value })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { title } = this.state;\n\n        COLUMN_SERVICE.createColumn({ title })\n            .then((serverResponse) => {\n                const { column, successMessage } = serverResponse.data;\n\n                this.props.updateColumnState(column, successMessage);\n                this.props.toggleColumnModal()\n\n                // clear form after submission\n                this.setState({\n                    title: '',\n                })\n\n                this.props.displayNotification()\n\n            })\n            .catch(err => {\n                if (err.response && err.response.data) {\n                    return this.setState({ message: err.response.data.message });\n                }\n            });\n    }\n\n    render() {\n        const { title } = this.state;\n        return (\n            <div>\n\n                <Modal centered isOpen={this.props.displayColumnModal}>\n                    <ModalHeader toggle={this.props.toggleColumnModal}>Add New List</ModalHeader>\n                    <ModalBody>\n                        <div className=\"modal-form\">\n                            <form onSubmit={this.handleSubmit} className=\"register-form\" id=\"login-form\">\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"title\" className=\"icon\"><FaColumns /></label>\n                                    <input type=\"text\" name=\"title\" id=\"title\" placeholder=\"List Title *\" required value={title}\n                                        onChange={this.handleChange} />\n                                </div>\n\n                                <div className=\"form-group form-button\">\n                                    <input type=\"submit\" name=\"create\" id=\"create\" className=\"form-submit-btn\" value=\"Create\" />\n                                </div>\n\n                            </form>\n                        </div>\n                    </ModalBody>\n                </Modal>\n\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport AUTH_SERVICE from '../../services/AuthService';\nimport { MdAddCircleOutline } from \"react-icons/md\";\nimport { FaListUl, FaMapMarkedAlt, FaPowerOff } from \"react-icons/fa\";\nimport { GoGraph } from \"react-icons/go\";\nimport './Sidebar.css'\n\nexport default class Sidebar extends Component {\n\n    logoutAndLiftUserState = () => {\n        AUTH_SERVICE.logout()\n            .then(() => this.props.onUserChange(null))\n            .catch(err => console.log(err));\n    };\n\n    render() {\n        return (\n            <div className=\"sidebar\">\n                <div className=\"area\"></div>\n                <nav className=\"main-menu\">\n                    <ul>\n                        <li onClick={this.props.toggleCreateModal}>\n                            <span>\n                                <MdAddCircleOutline className=\"menu-icon menu-add\" />\n                                <span className=\"nav-text\">Add new job</span>\n                            </span>\n                        </li>\n\n                        <li onClick={this.props.toggleColumnModal}>\n                            <span>\n                                <FaListUl className=\"menu-icon\" />\n                                <span className=\"nav-text\">Add new list</span>\n                            </span>\n                        </li>\n\n                        <li>\n                            <span>\n                                <GoGraph className=\"menu-icon\" />\n                                <span className=\"nav-text\"><Link to=\"/charting\">Graphs and Statistics</Link></span>\n                            </span>\n                        </li>\n\n                    </ul>\n\n                    <ul className=\"logout\">\n                        <li onClick={this.logoutAndLiftUserState}>\n                            <span>\n                                <FaPowerOff className=\"menu-icon\" />\n                                <span className=\"nav-text\">Logout</span>\n                            </span>\n                        </li>\n                    </ul>\n\n                </nav>\n                <nav className=\"mobile\">\n                    <MdAddCircleOutline className=\"menu-icon menu-add\" onClick={this.props.toggleCreateModal} />\n                    <FaListUl className=\"menu-icon\" onClick={this.props.toggleColumnModal} />\n                    <Link to=\"/charting\"><GoGraph className=\"menu-icon\"  /></Link>\n                    <FaPowerOff className=\"menu-icon\" onClick={this.logoutAndLiftUserState} />\n                </nav>\n            </div >\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { DragDropContext } from 'react-beautiful-dnd'\nimport Column from '../Column/Column'\nimport CreateCard from '../Card/CreateCard/CreateCard'\nimport CardDetails from '../Card/CardDetails/CardDetails'\nimport CreateColumn from '../Column/CreateColumn/CreateColumn'\nimport Sidebar from '../Sidebar/Sidebar'\nimport { Alert } from 'reactstrap';\nimport './Board.css'\n\nexport default class Board extends Component {\n    state = {\n        displayCreateModal: false,\n        displayDetailsModal: false,\n        displayEditModal: false,\n        displayColumnModal: false,\n        selectedCard: {},\n        displayNotification: false,\n    };\n\n    componentDidMount = () => {\n        this.props.fetchData()\n    }\n\n    setCurrentCard = (card) => {\n        this.setState({\n            selectedCard: card,\n        })\n    }\n\n    toggleDetailsModal = () => {\n        this.setState({\n            displayDetailsModal: !this.state.displayDetailsModal,\n        });\n    };\n\n    toggleCreateModal = () => {\n        this.setState({\n            displayCreateModal: !this.state.displayCreateModal,\n        });\n    };\n\n    toggleEditModal = () => {\n        this.setState({\n            displayEditModal: !this.state.displayEditModal,\n        });\n    };\n\n    toggleColumnModal = () => {\n        this.setState({\n            displayColumnModal: !this.state.displayColumnModal,\n        });\n    };\n\n    displayNotification = () => {\n        this.setState({ displayNotification: true }, () => {\n            window.setTimeout(() => {\n                this.setState({ displayNotification: false })\n            }, 2000)\n        });\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        const selectedCard = { ...this.state.selectedCard, [name]: value };\n        this.setState({\n            selectedCard\n        })\n    }\n\n    onDragEnd = result => {\n\n        // DragDropContext => board\n        // Droppable => columns\n        // Draggable => cards\n\n        const { destination, source, draggableId } = result;\n        const { columns, replaceColumns } = this.props;\n\n        // card has not moved\n        if (!destination) return;\n\n        // card moved to the same position it was initially in\n        if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n\n        /// reorder card ids in column\n        // retrieve the source column\n        const columnSrc = Object.values(columns).find(\n            (col) => col._id === source.droppableId\n        );\n        let columnDst = Object.values(columns).find(\n            (col) => col._id === destination.droppableId\n        );\n\n        const cardsSrc = [...columnSrc.cards];\n        let cardsDst = [...columnDst.cards];\n\n        if (source.droppableId === destination.droppableId) {\n            cardsDst = cardsSrc;\n        }\n        const card = cardsSrc.find((crd) => crd._id === draggableId);\n\n        cardsSrc.splice(source.index, 1);\n        cardsDst.splice(destination.index, 0, card);\n\n        replaceColumns(\n            { ...columnSrc, cards: cardsSrc },\n            { ...columnDst, cards: cardsDst }\n        );\n    };\n\n    getJobsApplied = () => {\n        const { cards } = this.props;\n        const jobsApplied = Object.values(cards).filter((card) => card.date)\n        return jobsApplied.length\n    }\n\n    getMsg = () => {\n        if (this.getJobsApplied() === 0) {\n            return \"jobs. What are you waiting for?\"\n        }\n        else if (this.getJobsApplied() === 1) {\n            return \"job.\"\n        }\n        else {\n            return \"jobs. Keep it up!\"\n        }\n    }\n\n    render() {\n        const { currentUser, onUserChange, columns, updateCardState, updateColumnState, replaceColumns, cards, deleteCard, editCard, editColumn, deleteColumn, successMessage } = this.props;\n\n\n        return (\n            <div className=\"board-container\">\n\n                <Sidebar\n                    onUserChange={onUserChange}\n                    toggleCreateModal={this.toggleCreateModal}\n                    toggleColumnModal={this.toggleColumnModal}\n                />\n\n                <Alert color=\"success\" isOpen={this.state.displayNotification}><b>{successMessage}</b></Alert>\n\n                <div className=\"welcome-msg\">\n                    <h2>Welcome, {`${currentUser.name}.`}</h2>\n                    <div style={{ color: \"#777\" }}>You have applied to <b>{this.getJobsApplied()}</b> {this.getMsg()} </div>\n                </div>\n\n                {/* test list view*/}\n                {/* {Object.values(cards).map((card, index) => {\n                    return (\n                        <div key={card._id}>\n                            {card.title}\n                        </div>\n                    )\n                })\n                } */}\n                {/* test */}\n\n                <CreateCard\n                    columns={columns}\n                    updateCardState={updateCardState}\n                    updateColumnState={updateColumnState}\n                    replaceColumns={replaceColumns}\n                    displayCreateModal={this.state.displayCreateModal}\n                    toggleCreateModal={this.toggleCreateModal}\n                    successMessage={successMessage}\n                    displayNotification={this.displayNotification}\n                    \n                />\n\n                <CardDetails\n                    card={this.state.selectedCard}\n                    deleteCard={deleteCard}\n                    displayDetailsModal={this.state.displayDetailsModal}\n                    displayEditModal={this.state.displayEditModal}\n                    toggleDetailsModal={this.toggleDetailsModal}\n                    toggleEditModal={this.toggleEditModal}\n                    displayNotification={this.displayNotification}\n                    handleChange={this.handleChange} editCard={editCard} />\n\n                <CreateColumn\n                    updateColumnState={updateColumnState}\n                    displayColumnModal={this.state.displayColumnModal}\n                    toggleColumnModal={this.toggleColumnModal}\n                    successMessage={successMessage}\n                    displayNotification={this.displayNotification}\n                />\n\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                    <div className=\"board\">\n\n                        {columns && Object.values(columns).map((column, index) => {\n                            return (\n                                <div key={column._id}>\n                                    <Column\n                                        column={column} index={index}\n                                        toggleDetailsModal={this.toggleDetailsModal} \n                                        setCurrentCard={this.setCurrentCard}\n                                        editColumn={editColumn}\n                                        deleteColumn={deleteColumn}\n                                        displayNotification={this.displayNotification}\n                                         />                                       \n                                </div>\n                            );\n                        })}\n                    </div>\n                </DragDropContext>\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ authorized, redirect, ...props }) => {\n  //   console.log('props in protected route: ', props);\n\n  if (authorized) {\n    return <Route {...props} />;\n  } else {\n    return <Redirect to={redirect} />;\n  }\n};\n\nexport default ProtectedRoute;\n","import React, { Component } from 'react'\nimport { ResponsiveLine } from '@nivo/line'\n\nexport default class Chart extends Component {\n    render() {\n\n        const { lineData } = this.props\n\n        return (\n            <ResponsiveLine\n                data={lineData}\n                margin={{ top: 10, right: 50, bottom: 130, left: 50 }}\n                xScale={{ type: 'point' }}\n                yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\n                yFormat=\" >-.2~f\"\n                curve=\"linear\"\n                axisTop={null}\n                axisRight={null}\n                axisBottom={{\n                    orient: 'bottom',\n                    tickSize: 5,\n                    tickPadding: 10,\n                    tickRotation: 0,\n                    legend: 'Location',\n                    legendOffset: 56,\n                    legendPosition: 'middle'\n                }}\n                axisLeft={{\n                    orient: 'left',\n                    tickSize: 5,\n                    tickPadding: 6,\n                    tickRotation: 0,\n                    legend: 'Number of Jobs',\n                    legendOffset: -40,\n                    legendPosition: 'middle'\n                }}\n                enableGridX={false}\n                enableGridY={false}\n                colors={{ scheme: 'category10' }}\n                lineWidth={4}\n                pointSize={10}\n                pointColor={{ from: 'color', modifiers: [] }}\n                pointBorderWidth={2}\n                pointBorderColor={{ from: 'serieColor' }}\n                pointLabelYOffset={-12}\n                enableArea={true}\n                areaBaselineValue={1}\n                useMesh={true}\n                legends={[]}\n            />\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { ResponsivePie } from '@nivo/pie'\n\nexport default class Pie extends Component {\n    render() {\n\n        const { pieData } = this.props\n\n        const styles = [\"lines\", \"dots\", \"\", \"\"]\n        const sliceStyle = Object.values(pieData).map(data => {\n            return {\n                match: {\n                    id: data.id\n                },\n                id: styles[Math.floor(Math.random() * Math.floor(styles.length))],\n            }\n        })\n\n        return (\n            <ResponsivePie\n                data={pieData}\n                margin={{ top: 10, right: 80, bottom: 80, left: 80 }}\n                innerRadius={0.5}\n                padAngle={0.7}\n                cornerRadius={3}\n                colors={{ scheme: 'category10' }}\n                borderWidth={1}\n                borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\n                radialLabelsSkipAngle={10}\n                radialLabelsTextColor=\"black\"\n                radialLabelsLinkColor={{ from: 'color' }}\n                sliceLabelsSkipAngle={10}\n                sliceLabelsTextColor=\"black\"\n                defs={[\n                    {\n                        id: 'dots',\n                        type: 'patternDots',\n                        background: 'inherit',\n                        color: 'rgba(255, 255, 255, 0.3)',\n                        size: 4,\n                        padding: 1,\n                        stagger: true\n                    },\n                    {\n                        id: 'lines',\n                        type: 'patternLines',\n                        background: 'inherit',\n                        color: 'rgba(255, 255, 255, 0.3)',\n                        rotation: -45,\n                        lineWidth: 6,\n                        spacing: 10\n                    }\n                ]}\n                fill={sliceStyle}\n                legends={[]}\n            />\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { ResponsiveCalendar } from '@nivo/calendar'\n\nexport default class Calendar extends Component {\n    render() {\n        const { calendarData } = this.props;\n        return (\n            <ResponsiveCalendar\n                data={calendarData}\n                from=\"2020-01-02\"\n                to=\"2020-12-31\"\n                emptyColor=\"#eeeeee\"\n                colors={['#C2EDCF', '#71D68F', '#206E38', '#123F20']}\n                margin={{ top: 0, right: 40, bottom: 40, left: -1500 }}\n                yearSpacing={40}\n                monthBorderColor=\"#ffffff\"\n                dayBorderWidth={2}\n                dayBorderColor=\"#ffffff\"\n                legends={[\n                    {\n                        anchor: 'bottom-right',\n                        direction: 'row',\n                        translateY: 36,\n                        itemCount: 4,\n                        itemWidth: 42,\n                        itemHeight: 36,\n                        itemsSpacing: 14,\n                        itemDirection: 'right-to-left'\n                    }\n                ]}\n            />\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { ResponsiveBar } from '@nivo/bar'\n\nexport default class Bar extends Component {\n    render() {\n        const { barData } = this.props;\n        return (\n            <ResponsiveBar\n                data={barData}\n                keys={['key']}\n                indexBy=\"salary\"\n                margin={{ top: -30, right: 100, bottom: 125, left: 130 }}\n                padding={0.3}\n                layout=\"horizontal\"\n                valueScale={{ type: 'linear' }}\n                colors={{ scheme: 'category10' }}\n                defs={[\n                    {\n                        id: 'dots',\n                        type: 'patternDots',\n                        background: 'inherit',\n                        color: \"#63a0cb\",\n                        size: 4,\n                        padding: 9,\n                        stagger: true\n                    },\n                    {\n                        id: 'lines',\n                        type: 'patternLines',\n                        background: 'inherit',\n                        color: \"#63a0cb\",\n                        rotation: -45,\n                        lineWidth: 6,\n                        spacing: 16\n                    }\n                ]}\n                fill={[\n                    {\n                        match: {\n                            id: 'none'\n                        },\n                        id: 'dots'\n                    },\n                    {\n                        match: {\n                            id: 'key'\n                        },\n                        id: 'lines'\n                    }\n                ]}\n                borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\n                axisTop={null}\n                axisRight={null}\n                axisBottom={{\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: 'Salary',\n                    legendPosition: 'middle',\n                    legendOffset: 50\n                }}\n                axisLeft={{\n                    tickSize: 5,\n                    tickPadding: 5,\n                    tickRotation: 0,\n                    legend: 'Company',\n                    legendPosition: 'middle',\n                    legendOffset: -100\n                }}\n                enableGridX={true}\n                enableGridY={false}\n                labelSkipWidth={12}\n                labelSkipHeight={12}\n                labelTextColor=\"#ffffff\"\n                legends={[]}\n                animate={true}\n                motionStiffness={90}\n                motionDamping={15}\n            />\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Line from './Line'\nimport Pie from './Pie'\nimport Calendar from './Calendar'\nimport Bar from './Bar'\nimport { Link } from 'react-router-dom'\nimport './Charting.css'\n\nexport default class Charting extends Component {\n    render() {\n\n        // calendar data - Jobs Applied by Date\n        const dateOccurrence = Object.values(this.props.cards).reduce(function (acc, curr) {\n            acc[curr.date] = (acc[curr.date] || 0) + 1;\n            return acc\n        }, {});\n\n        const formattedData = Object.entries(dateOccurrence).map(entry => {\n            return {\n                day: entry[0].slice(0, 10).toString(),\n                value: entry[1].toString()\n            }\n        })\n\n        // pie data - Number of Applications Per Stage\n        const pieData = Object.values(this.props.columns).map((column) => {\n            return {\n                \"id\": column.title,\n                \"label\": column.title,\n                \"value\": column.cards.length,\n            }\n        })\n\n        // line data - Number of Applications by Location\n        const locationOccurrence = Object.values(this.props.cards).reduce(function (acc, curr) {\n            acc[curr.location.split(',')[0]] = (acc[curr.location.split(',')[0]] || 0) + 1;\n            return acc\n        }, {});\n\n        const lineData = Object.entries(locationOccurrence).map(entry => {\n            return {\n                x: entry[0],\n                y: entry[1]\n            }\n        })\n\n        const formatData = [{ data: lineData }]\n\n        // bar data\n        const barData = [\n            {\n                \"salary\": \"Google\",\n                \"key\": 57500,\n                \"keyColor\": \"hsl(212, 70%, 50%)\",\n            },\n            {\n                \"salary\": \"Amazon\",\n                \"key\": 75000,\n                \"keyColor\": \"hsl(212, 70%, 50%)\",\n            }, {\n                \"salary\": \"Facebook\",\n                \"key\": 100000,\n                \"keyColor\": \"hsl(212, 70%, 50%)\",\n            },\n        ]\n        return (\n            <div className=\"charting-container\">\n                <center><h2>Graphs and Stats</h2></center>\n                <Link to='/' className=\"btn-primary\" style={{ marginLeft: \"1rem\", padding: \".6rem 1.8rem\" }}>Back</Link>\n                <div className=\"charts\">\n                    <div className=\"chart-row\">\n                        <div className=\"chart\">\n                            <h3><b>Number of Applications Per Stage</b></h3>\n                            <Pie pieData={pieData} /></div>\n                        <div className=\"chart\">\n                            <h3><b>Jobs Applied by Date</b></h3>\n                            <Calendar calendarData={formattedData} /></div>\n                    </div>\n                    <div className=\"chart-row\">\n                        <div className=\"chart\">\n                            <h3><b>Number of Applications by Location</b></h3>\n                            <Line lineData={formatData} />\n                        </div>\n                        <div className=\"chart\">\n                            <h3><b>Salary Estimate by Company</b></h3>\n                            <Bar barData={barData} />\n\n                            {/* <h3><b>Jobs Applied - List View</b></h3>\n                            <div className=\"jobs-table\" >\n                                {Object.values(this.props.cards).sort((a, b) => {\n                                    a = a.title.toUpperCase();\n                                    b = b.title.toUpperCase();\n                                    return (a < b) ? -1 : (a > b) ? 1 : 0;\n                                }).map((card, i) => {\n                                    {\n                                        return (\n                                            <div key={i}><b>{i < 9 ? `0${i + 1}` : i + 1}. <span>{card.title}</span> - {card.company}</b> </div>\n                                        )\n                                    }\n                                })}\n                            </div> */}\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport AUTH_SERVICE from './services/AuthService';\nimport CARD_SERVICE from './services/CardService'\nimport COLUMN_SERVICE from './services/ColumnService'\nimport Signup from './components/Authentication/Signup/Signup';\nimport Login from './components/Authentication/Login/Login';\nimport Board from './components/Board/Board'\nimport ProtectedRoute from './components/ProtectedRoute';\nimport Charting from './components/Chart/Charting'\n\nexport default class App extends React.Component {\n  state = {\n    currentUser: null,\n    loading: true,\n    cards: [],\n    columns: [],\n    successMessage: null\n  };\n\n  componentDidMount = () => {\n    this.fetchData();\n  };\n\n  fetchData = () => {\n    Promise.all([\n      CARD_SERVICE.getCards(),\n      COLUMN_SERVICE.getColumns(),\n      AUTH_SERVICE.getAuthenticatedUser(),\n    ])\n      .then((responseFromServer) => {\n        const cards = responseFromServer[0].data?.cards?.reduce(\n          (a, v) => ({ ...a, [v._id]: v }),\n          {}\n        );\n        const columns = responseFromServer[1].data?.columns?.reduce(\n          (a, v) => ({ ...a, [v._id]: v }),\n          {}\n        );\n        const { user } = responseFromServer[2].data; //last\n        this.setState({ cards, columns, currentUser: user, loading: false });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  updateUser = (user, columns) => {\n    this.setState({ currentUser: user, columns });\n  };\n\n  updateCardState = (cards,successMessage) => {\n    const updateCard = { ...this.state.cards, [cards._id]: cards };\n    this.setState({ cards: updateCard, successMessage});\n  };\n\n  updateColumnState = (columns,successMessage) => {\n    const updateColumn = { ...this.state.columns, [columns._id]: columns };\n    this.setState({ columns: updateColumn, successMessage });\n  };\n\n  replaceColumns = async (column1, column2) => {\n    this.setState({\n      columns: {\n        ...this.state.columns,\n        [column1._id]: column1,\n        [column2._id]: column2,\n      },\n    });\n    await Promise.all([COLUMN_SERVICE.updateColumn(column1._id, column1), COLUMN_SERVICE.updateColumn(column2._id, column2)]);\n  };\n\n  editCard = (id, data) => {\n    CARD_SERVICE.updateCard(id, data)\n      .then((response) => {\n        const { successMessage } = response.data;\n        const columnId = Object.values(this.state.columns).find(col => col.cards.find(card => card._id === id))._id;\n\n        COLUMN_SERVICE.getColumnDetails(columnId)\n          .then((res) => {\n            console.log(res.data.column)\n            this.setState({\n              columns: { ...this.state.columns, [columnId]: res.data.column },\n              successMessage,\n            });\n          })\n      })\n      .catch(err => {\n        console.log(err)\n      });\n\n  }\n\n  deleteCard = (id) => {\n    CARD_SERVICE.deleteCard(id)\n      .then((deleteRes) => {\n        const { successMessage } = deleteRes.data;\n        const columnId = Object.values(this.state.columns).find(col => col.cards.find(card => card._id === id))._id;\n        const column = {\n          ...this.state.columns[columnId],\n          cards: this.state.columns[columnId].cards.filter(card => card._id !== id),\n        };\n        const cards = { ...this.state.cards };\n        delete cards[id];\n        this.setState({\n          columns: { ...this.state.columns, [columnId]: column },\n          cards,\n          successMessage,\n        });\n      })\n      .catch(err => {\n        console.log(err)\n      });\n  }\n\n  editColumn = (id, data) => {\n    let updatedColumn = this.state.columns[id]\n    updatedColumn.title = data\n    COLUMN_SERVICE.updateColumn(id, updatedColumn)\n    .then((res)=>{\n      const { successMessage } = res.data;\n      COLUMN_SERVICE.getColumns()\n      .then((response) => {\n        this.setState({\n          columns: response.data.columns,\n          successMessage,\n        });\n      })\n    })\n  }\n\n  deleteColumn = (id) => {\n    COLUMN_SERVICE.deleteColumn(id)\n    .then((response)=>{\n      const { successMessage } = response.data;\n      const columns = Object.values(this.state.columns).filter(column => column._id !== id)\n      this.setState({\n        columns,\n        successMessage,\n      }); \n    })\n  }\n\n  render() {\n    console.log('user: ', this.state.currentUser);\n    console.log('cards: ', this.state.cards);\n    console.log('columns: ', this.state.columns);\n    return (\n      <div className='App'>\n        <BrowserRouter>\n\n          <Switch>\n            {/* <Route path='/somePage' component={someComponent} /> */}\n\n            <Route path='/signup' render={props => <Signup {...props} onUserChange={this.updateUser} />} />\n            <Route path='/login' render={props => <Login {...props} onUserChange={this.updateUser} />} />\n            <Route path='/charting' render={props => <Charting {...props} cards={this.state.cards} columns={this.state.columns}/>} />\n\n            {/* if user is logged in, render the board component at the root path*/}\n            {!this.state.loading\n              ? (\n                <ProtectedRoute\n                  path='/'\n                  authorized={this.state.currentUser}\n                  redirect={'/signup'}\n                  render={props =>\n                    <Board {...props}\n                      currentUser={this.state.currentUser}\n                      cards={this.state.cards}\n                      columns={this.state.columns}\n                      successMessage={this.state.successMessage}\n                      onUserChange={this.updateUser}\n                      updateCardState={this.updateCardState}\n                      updateColumnState={this.updateColumnState}\n                      replaceColumns={this.replaceColumns}\n                      deleteCard={this.deleteCard}\n                      editCard={this.editCard}\n                      editColumn={this.editColumn}\n                      deleteColumn={this.deleteColumn}\n                      fetchData={this.fetchData}\n                    />}\n                />)\n              : <Route path='/' render={props => <div></div>} />\n            }\n          </Switch>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}